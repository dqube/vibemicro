<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="BuildingBlocks Code Analysis Rules" Description="Code analysis rules for BuildingBlocks projects" ToolsVersion="16.0">
  
  <!-- Microsoft Rules -->
  <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
    <Rule Id="CA1001" Action="Warning" />
    <Rule Id="CA1009" Action="Warning" />
    <Rule Id="CA1016" Action="Warning" />
    <Rule Id="CA1033" Action="Warning" />
    <Rule Id="CA1049" Action="Warning" />
    <Rule Id="CA1060" Action="Warning" />
    <Rule Id="CA1061" Action="Warning" />
    <Rule Id="CA1063" Action="Warning" />
    <Rule Id="CA1065" Action="Warning" />
    <Rule Id="CA1301" Action="Warning" />
    <Rule Id="CA1400" Action="Warning" />
    <Rule Id="CA1401" Action="Warning" />
    <Rule Id="CA1403" Action="Warning" />
    <Rule Id="CA1404" Action="Warning" />
    <Rule Id="CA1405" Action="Warning" />
    <Rule Id="CA1410" Action="Warning" />
    <Rule Id="CA1415" Action="Warning" />
    <Rule Id="CA1821" Action="Warning" />
    <Rule Id="CA1900" Action="Warning" />
    <Rule Id="CA1901" Action="Warning" />
    <Rule Id="CA2002" Action="Warning" />
    <Rule Id="CA2100" Action="Warning" />
    <Rule Id="CA2101" Action="Warning" />
    <Rule Id="CA2108" Action="Warning" />
    <Rule Id="CA2111" Action="Warning" />
    <Rule Id="CA2112" Action="Warning" />
    <Rule Id="CA2114" Action="Warning" />
    <Rule Id="CA2116" Action="Warning" />
    <Rule Id="CA2117" Action="Warning" />
    <Rule Id="CA2122" Action="Warning" />
    <Rule Id="CA2123" Action="Warning" />
    <Rule Id="CA2124" Action="Warning" />
    <Rule Id="CA2126" Action="Warning" />
    <Rule Id="CA2131" Action="Warning" />
    <Rule Id="CA2132" Action="Warning" />
    <Rule Id="CA2133" Action="Warning" />
    <Rule Id="CA2134" Action="Warning" />
    <Rule Id="CA2137" Action="Warning" />
    <Rule Id="CA2138" Action="Warning" />
    <Rule Id="CA2140" Action="Warning" />
    <Rule Id="CA2141" Action="Warning" />
    <Rule Id="CA2146" Action="Warning" />
    <Rule Id="CA2147" Action="Warning" />
    <Rule Id="CA2149" Action="Warning" />
    <Rule Id="CA2200" Action="Warning" />
    <Rule Id="CA2202" Action="Warning" />
    <Rule Id="CA2207" Action="Warning" />
    <Rule Id="CA2212" Action="Warning" />
    <Rule Id="CA2213" Action="Warning" />
    <Rule Id="CA2214" Action="Warning" />
    <Rule Id="CA2216" Action="Warning" />
    <Rule Id="CA2220" Action="Warning" />
    <Rule Id="CA2229" Action="Warning" />
    <Rule Id="CA2231" Action="Warning" />
    <Rule Id="CA2232" Action="Warning" />
    <Rule Id="CA2235" Action="Warning" />
    <Rule Id="CA2236" Action="Warning" />
    <Rule Id="CA2237" Action="Warning" />
    <Rule Id="CA2238" Action="Warning" />
    <Rule Id="CA2240" Action="Warning" />
    <Rule Id="CA2241" Action="Warning" />
    <Rule Id="CA2242" Action="Warning" />
  </Rules>

  <!-- StyleCop Rules -->
  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
    <!-- Documentation Rules -->
    <Rule Id="SA1600" Action="None" /> <!-- Elements should be documented -->
    <Rule Id="SA1601" Action="None" /> <!-- Partial elements should be documented -->
    <Rule Id="SA1602" Action="None" /> <!-- Enumeration items should be documented -->
    <Rule Id="SA1633" Action="None" /> <!-- File should have header -->
    
    <!-- Ordering Rules -->
    <Rule Id="SA1200" Action="Warning" /> <!-- Using directives should be placed correctly -->
    <Rule Id="SA1201" Action="Warning" /> <!-- Elements should appear in the correct order -->
    <Rule Id="SA1202" Action="Warning" /> <!-- Elements should be ordered by access -->
    <Rule Id="SA1203" Action="Warning" /> <!-- Constants should appear before fields -->
    <Rule Id="SA1204" Action="Warning" /> <!-- Static elements should appear before instance elements -->
    <Rule Id="SA1208" Action="Warning" /> <!-- System using directives should be placed before other using directives -->
    <Rule Id="SA1210" Action="Warning" /> <!-- Using directives should be ordered alphabetically by namespace -->
    <Rule Id="SA1211" Action="Warning" /> <!-- Using alias directives should be ordered alphabetically by alias name -->
    <Rule Id="SA1214" Action="Warning" /> <!-- Readonly fields should appear before non-readonly fields -->
    
    <!-- Naming Rules -->
    <Rule Id="SA1300" Action="Warning" /> <!-- Element should begin with upper-case letter -->
    <Rule Id="SA1302" Action="Warning" /> <!-- Interface names should begin with I -->
    <Rule Id="SA1303" Action="Warning" /> <!-- Const field names should begin with upper-case letter -->
    <Rule Id="SA1304" Action="Warning" /> <!-- Non-private readonly fields should begin with upper-case letter -->
    <Rule Id="SA1306" Action="Warning" /> <!-- Field names should begin with lower-case letter -->
    <Rule Id="SA1307" Action="Warning" /> <!-- Accessible fields should begin with upper-case letter -->
    <Rule Id="SA1308" Action="Warning" /> <!-- Variable names should not be prefixed -->
    <Rule Id="SA1309" Action="None" />    <!-- Field names should not begin with underscore -->
    <Rule Id="SA1310" Action="Warning" /> <!-- Field names should not contain underscore -->
    <Rule Id="SA1311" Action="Warning" /> <!-- Static readonly fields should begin with upper-case letter -->
    
    <!-- Maintainability Rules -->
    <Rule Id="SA1400" Action="Warning" /> <!-- Access modifier should be declared -->
    <Rule Id="SA1401" Action="Warning" /> <!-- Fields should be private -->
    <Rule Id="SA1402" Action="Warning" /> <!-- File may only contain a single type -->
    <Rule Id="SA1403" Action="Warning" /> <!-- File may only contain a single namespace -->
    <Rule Id="SA1404" Action="Warning" /> <!-- Code analysis suppression should have justification -->
    <Rule Id="SA1405" Action="Warning" /> <!-- Debug.Assert should provide message text -->
    <Rule Id="SA1406" Action="Warning" /> <!-- Debug.Fail should provide message text -->
    <Rule Id="SA1407" Action="Warning" /> <!-- Arithmetic expressions should declare precedence -->
    <Rule Id="SA1408" Action="Warning" /> <!-- Conditional expressions should declare precedence -->
    <Rule Id="SA1410" Action="Warning" /> <!-- Remove delegate parens when possible -->
    <Rule Id="SA1411" Action="Warning" /> <!-- Attribute constructor should not use unnecessary parenthesis -->
    <Rule Id="SA1413" Action="Warning" /> <!-- Use trailing comma in multi-line initializers -->
    
    <!-- Layout Rules -->
    <Rule Id="SA1500" Action="Warning" /> <!-- Braces for multi-line statements should not share line -->
    <Rule Id="SA1501" Action="Warning" /> <!-- Statement should not be on a single line -->
    <Rule Id="SA1502" Action="Warning" /> <!-- Element should not be on a single line -->
    <Rule Id="SA1503" Action="Warning" /> <!-- Braces should not be omitted -->
    <Rule Id="SA1504" Action="Warning" /> <!-- All accessors should be single-line or multi-line -->
    <Rule Id="SA1505" Action="Warning" /> <!-- Opening braces should not be followed by blank line -->
    <Rule Id="SA1506" Action="Warning" /> <!-- Element documentation headers should not be followed by blank line -->
    <Rule Id="SA1507" Action="Warning" /> <!-- Code should not contain multiple blank lines in a row -->
    <Rule Id="SA1508" Action="Warning" /> <!-- Closing braces should not be preceded by blank line -->
    <Rule Id="SA1509" Action="Warning" /> <!-- Opening braces should not be preceded by blank line -->
    <Rule Id="SA1510" Action="Warning" /> <!-- Chained statement blocks should not be preceded by blank line -->
    <Rule Id="SA1511" Action="Warning" /> <!-- While-do footer should not be preceded by blank line -->
    <Rule Id="SA1512" Action="Warning" /> <!-- Single-line comments should not be followed by blank line -->
    <Rule Id="SA1513" Action="Warning" /> <!-- Closing brace should be followed by blank line -->
    <Rule Id="SA1514" Action="Warning" /> <!-- Element documentation header should be preceded by blank line -->
    <Rule Id="SA1515" Action="Warning" /> <!-- Single-line comment should be preceded by blank line -->
    <Rule Id="SA1516" Action="Warning" /> <!-- Elements should be separated by blank line -->
    <Rule Id="SA1517" Action="Warning" /> <!-- Code should not contain blank lines at start of file -->
    <Rule Id="SA1518" Action="Warning" /> <!-- Use line endings correctly at end of file -->
    
    <!-- Spacing Rules -->
    <Rule Id="SA1000" Action="Warning" /> <!-- Keywords should be spaced correctly -->
    <Rule Id="SA1001" Action="Warning" /> <!-- Commas should be spaced correctly -->
    <Rule Id="SA1002" Action="Warning" /> <!-- Semicolons should be spaced correctly -->
    <Rule Id="SA1003" Action="Warning" /> <!-- Symbols should be spaced correctly -->
    <Rule Id="SA1004" Action="Warning" /> <!-- Documentation lines should begin with single space -->
    <Rule Id="SA1005" Action="Warning" /> <!-- Single line comments should begin with single space -->
    <Rule Id="SA1006" Action="Warning" /> <!-- Preprocessor keywords should not be preceded by space -->
    <Rule Id="SA1007" Action="Warning" /> <!-- Operator keyword should be followed by space -->
    <Rule Id="SA1008" Action="Warning" /> <!-- Opening parenthesis should be spaced correctly -->
    <Rule Id="SA1009" Action="Warning" /> <!-- Closing parenthesis should be spaced correctly -->
    <Rule Id="SA1010" Action="Warning" /> <!-- Opening square brackets should be spaced correctly -->
    <Rule Id="SA1011" Action="Warning" /> <!-- Closing square brackets should be spaced correctly -->
    <Rule Id="SA1012" Action="Warning" /> <!-- Opening braces should be spaced correctly -->
    <Rule Id="SA1013" Action="Warning" /> <!-- Closing braces should be spaced correctly -->
    <Rule Id="SA1014" Action="Warning" /> <!-- Opening generic brackets should be spaced correctly -->
    <Rule Id="SA1015" Action="Warning" /> <!-- Closing generic brackets should be spaced correctly -->
    <Rule Id="SA1016" Action="Warning" /> <!-- Opening attribute brackets should be spaced correctly -->
    <Rule Id="SA1017" Action="Warning" /> <!-- Closing attribute brackets should be spaced correctly -->
    <Rule Id="SA1018" Action="Warning" /> <!-- Nullable type symbols should be spaced correctly -->
    <Rule Id="SA1019" Action="Warning" /> <!-- Member access symbols should be spaced correctly -->
    <Rule Id="SA1020" Action="Warning" /> <!-- Increment decrement symbols should be spaced correctly -->
    <Rule Id="SA1021" Action="Warning" /> <!-- Negative signs should be spaced correctly -->
    <Rule Id="SA1022" Action="Warning" /> <!-- Positive signs should be spaced correctly -->
    <Rule Id="SA1023" Action="Warning" /> <!-- Dereference and access of symbols should be spaced correctly -->
    <Rule Id="SA1024" Action="Warning" /> <!-- Colons should be spaced correctly -->
    <Rule Id="SA1025" Action="Warning" /> <!-- Code should not contain multiple whitespace in a row -->
    <Rule Id="SA1026" Action="Warning" /> <!-- Code should not contain space after new keyword in implicitly typed array allocation -->
    <Rule Id="SA1027" Action="Warning" /> <!-- Use tabs correctly -->
    <Rule Id="SA1028" Action="Warning" /> <!-- Code should not contain trailing whitespace -->
  </Rules>

  <!-- SonarAnalyzer Rules -->
  <Rules AnalyzerId="SonarAnalyzer.CSharp" RuleNamespace="SonarAnalyzer.CSharp">
    <!-- Bug Detection -->
    <Rule Id="S1066" Action="Warning" /> <!-- Collapsible "if" statements should be merged -->
    <Rule Id="S1067" Action="Warning" /> <!-- Expressions should not be too complex -->
    <Rule Id="S1104" Action="Warning" /> <!-- Fields should not have public accessibility -->
    <Rule Id="S1118" Action="Warning" /> <!-- Utility classes should not have public constructors -->
    <Rule Id="S1125" Action="Warning" /> <!-- Boolean literals should not be redundant -->
    <Rule Id="S1134" Action="Warning" /> <!-- Track uses of "FIXME" tags -->
    <Rule Id="S1135" Action="Warning" /> <!-- Track uses of "TODO" tags -->
    <Rule Id="S1168" Action="Warning" /> <!-- Empty arrays and collections should be returned instead of null -->
    <Rule Id="S1172" Action="Warning" /> <!-- Unused method parameters should be removed -->
    <Rule Id="S1186" Action="Warning" /> <!-- Methods should not be empty -->
    <Rule Id="S1200" Action="Warning" /> <!-- Classes should not be coupled to too many other classes -->
    <Rule Id="S1244" Action="Warning" /> <!-- Floating point numbers should not be tested for equality -->
    <Rule Id="S1301" Action="Warning" /> <!-- "switch" statements should have at least 3 "case" clauses -->
    <Rule Id="S1309" Action="Warning" /> <!-- Track uses of in-source issue suppressions -->
    <Rule Id="S1449" Action="Warning" /> <!-- Culture should be specified for "string" operations -->
    <Rule Id="S1450" Action="Warning" /> <!-- Private fields only used as local variables in methods should become local variables -->
    <Rule Id="S1481" Action="Warning" /> <!-- Unused local variables should be removed -->
    <Rule Id="S1541" Action="Warning" /> <!-- Methods and properties should not be too complex -->
    <Rule Id="S1854" Action="Warning" /> <!-- Unused assignments should be removed -->
    <Rule Id="S1940" Action="Warning" /> <!-- Boolean checks should not be inverted -->
    <Rule Id="S2114" Action="Warning" /> <!-- Collections should not be passed as arguments to their own methods -->
    <Rule Id="S2123" Action="Warning" /> <!-- Values should not be uselessly incremented -->
    <Rule Id="S2139" Action="Warning" /> <!-- Exceptions should be either logged or rethrown but not both -->
    <Rule Id="S2178" Action="Warning" /> <!-- Short-circuit logic should be used in boolean contexts -->
    <Rule Id="S2183" Action="Warning" /> <!-- Ints and longs should not be shifted by more than their number of bits-1 -->
    <Rule Id="S2184" Action="Warning" /> <!-- Results of integer division should not be assigned to floating point variables -->
    <Rule Id="S2219" Action="Warning" /> <!-- Runtime type checking should be simplified -->
    <Rule Id="S2223" Action="Warning" /> <!-- Non-constant static fields should not be visible -->
    <Rule Id="S2225" Action="Warning" /> <!-- "ToString()" method should not return null -->
    <Rule Id="S2259" Action="Warning" /> <!-- Null pointers should not be dereferenced -->
    <Rule Id="S2275" Action="Warning" /> <!-- Composite format strings should be used correctly -->
    <Rule Id="S2292" Action="Warning" /> <!-- Trivial properties should be auto-implemented -->
    <Rule Id="S2326" Action="Warning" /> <!-- Unused type parameters should be removed -->
    <Rule Id="S2328" Action="Warning" /> <!-- "GetHashCode" should not reference mutable fields -->
    <Rule Id="S2330" Action="Warning" /> <!-- Array covariance should not be used -->
    <Rule Id="S2333" Action="Warning" /> <!-- Redundant modifiers should not be used -->
    <Rule Id="S2342" Action="Warning" /> <!-- Enumeration types should comply with a naming convention -->
    <Rule Id="S2344" Action="Warning" /> <!-- Enumeration type names should not have "Flags" or "Enum" suffixes -->
    <Rule Id="S2346" Action="Warning" /> <!-- Flags enumerations zero-value members should be named "None" -->
    <Rule Id="S2357" Action="Warning" /> <!-- Fields should be private -->
    <Rule Id="S2365" Action="Warning" /> <!-- Properties should not make collection or array copies -->
    <Rule Id="S2368" Action="Warning" /> <!-- Public methods should not have multidimensional array parameters -->
    <Rule Id="S2372" Action="Warning" /> <!-- Exceptions should not be thrown from property getters -->
    <Rule Id="S2376" Action="Warning" /> <!-- Write-only properties should not be used -->
    <Rule Id="S2386" Action="Warning" /> <!-- Mutable fields should not be "public static" -->
    <Rule Id="S2436" Action="Warning" /> <!-- Types and methods should not have too many generic parameters -->
    <Rule Id="S2437" Action="Warning" /> <!-- Silly bit operations should not be performed -->
    <Rule Id="S2479" Action="Warning" /> <!-- Whitespace and control characters in string literals should be explicit -->
    <Rule Id="S2486" Action="Warning" /> <!-- Generic exceptions should not be ignored -->
    <Rule Id="S2551" Action="Warning" /> <!-- Shared resources should not be used for locking -->
    <Rule Id="S2583" Action="Warning" /> <!-- Conditionally executed blocks should be reachable -->
    <Rule Id="S2589" Action="Warning" /> <!-- Boolean expressions should not be gratuitous -->
    <Rule Id="S2674" Action="Warning" /> <!-- The length returned by "Stream.Read" should be checked -->
    <Rule Id="S2681" Action="Warning" /> <!-- Multiline blocks should be enclosed in curly braces -->
    <Rule Id="S2688" Action="Warning" /> <!-- "NaN" should not be used in comparisons -->
    <Rule Id="S2692" Action="Warning" /> <!-- "IndexOf" checks should not be for positive numbers -->
    <Rule Id="S2696" Action="Warning" /> <!-- Instance members should not write to "static" fields -->
    <Rule Id="S2699" Action="Warning" /> <!-- Tests should include assertions -->
    <Rule Id="S2701" Action="Warning" /> <!-- Literal boolean values should not be used in assertions -->
    <Rule Id="S2743" Action="Warning" /> <!-- Static fields should not be used in generic types -->
    <Rule Id="S2755" Action="Warning" /> <!-- XML parsers should not be vulnerable to XXE attacks -->
    <Rule Id="S2757" Action="Warning" /> <!-- "=+" should not be used instead of "+=" -->
    <Rule Id="S2758" Action="Warning" /> <!-- "=*" should not be used instead of "*=" -->
    <Rule Id="S2760" Action="Warning" /> <!-- "=+" should not be used instead of "+=" -->
    <Rule Id="S2761" Action="Warning" /> <!-- "=-" should not be used instead of "-=" -->
    <Rule Id="S2930" Action="Warning" /> <!-- "IDisposables" should be disposed -->
    <Rule Id="S2931" Action="Warning" /> <!-- Classes with "IDisposable" members should implement "IDisposable" -->
    <Rule Id="S2933" Action="Warning" /> <!-- Fields that are only assigned in the constructor should be "readonly" -->
    <Rule Id="S2934" Action="Warning" /> <!-- Property assignments should not be made for "readonly" fields not constrained to reference types -->
    <Rule Id="S2952" Action="Warning" /> <!-- Classes should "Dispose" of members from the classes' own "Dispose" methods -->
    <Rule Id="S2953" Action="Warning" /> <!-- Methods named "Dispose" should implement "IDisposable.Dispose" -->
    <Rule Id="S2955" Action="Warning" /> <!-- Generic parameters not constrained to reference types should not be compared to "null" -->
    <Rule Id="S2971" Action="Warning" /> <!-- "IEnumerable" LINQs should be simplified -->
    <Rule Id="S2995" Action="Warning" /> <!-- "Object.ReferenceEquals" should not be used for value types -->
    <Rule Id="S3005" Action="Warning" /> <!-- URIs should not be hardcoded -->
    <Rule Id="S3052" Action="Warning" /> <!-- Members should not be initialized to default values -->
    <Rule Id="S3060" Action="Warning" /> <!-- "is" should not be used with "this" -->
    <Rule Id="S3168" Action="Warning" /> <!-- "async" methods should not return "void" -->
    <Rule Id="S3169" Action="Warning" /> <!-- Multiple variables should not be declared on the same line -->
    <Rule Id="S3172" Action="Warning" /> <!-- Delegates should not be subtracted -->
    <Rule Id="S3215" Action="Warning" /> <!-- "interface" instances should not be cast to concrete types -->
    <Rule Id="S3216" Action="Warning" /> <!-- "ConfigureAwait(false)" should be used -->
    <Rule Id="S3217" Action="Warning" /> <!-- "static" members should not be used on generic types -->
    <Rule Id="S3218" Action="Warning" /> <!-- Inner class members should not shadow outer class "static" or type members -->
    <Rule Id="S3220" Action="Warning" /> <!-- Method calls should not resolve ambiguously to overloads with "params" -->
    <Rule Id="S3234" Action="Warning" /> <!-- "GC.SuppressFinalize" should not be called -->
    <Rule Id="S3235" Action="Warning" /> <!-- Methods should not have identical implementations -->
    <Rule Id="S3236" Action="Warning" /> <!-- Caller information arguments should not be provided explicitly -->
    <Rule Id="S3237" Action="Warning" /> <!-- "value" parameters should be used -->
    <Rule Id="S3240" Action="Warning" /> <!-- The simplest possible condition syntax should be used -->
    <Rule Id="S3241" Action="Warning" /> <!-- Methods should not return values that are never used -->
    <Rule Id="S3242" Action="Warning" /> <!-- Method parameters should be declared with base types -->
    <Rule Id="S3244" Action="Warning" /> <!-- Anonymous delegates should not be used to unsubscribe from Events -->
    <Rule Id="S3246" Action="Warning" /> <!-- Generic type parameters should be co/contravariant when possible -->
    <Rule Id="S3247" Action="Warning" /> <!-- Duplicate casts should not be made -->
    <Rule Id="S3249" Action="Warning" /> <!-- Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals" -->
    <Rule Id="S3251" Action="Warning" /> <!-- Implementations should be provided for "partial" methods -->
    <Rule Id="S3253" Action="Warning" /> <!-- Constructor and destructor declarations should not be redundant -->
    <Rule Id="S3254" Action="Warning" /> <!-- Default parameter values should not be passed as arguments -->
    <Rule Id="S3256" Action="Warning" /> <!-- "string.IsNullOrEmpty" should be used -->
    <Rule Id="S3257" Action="Warning" /> <!-- Declarations and initializations should be as concise as possible -->
    <Rule Id="S3261" Action="Warning" /> <!-- Namespaces should not be empty -->
    <Rule Id="S3262" Action="Warning" /> <!-- "params" should be used instead of "Array" when possible -->
    <Rule Id="S3263" Action="Warning" /> <!-- Static fields should appear in the order they must be initialized -->
    <Rule Id="S3264" Action="Warning" /> <!-- Events should not be used like methods -->
    <Rule Id="S3265" Action="Warning" /> <!-- Non-flags enums should not be used in bitwise operations -->
    <Rule Id="S3330" Action="Warning" /> <!-- Cookies should be "secure" -->
    <Rule Id="S3343" Action="Warning" /> <!-- Caller information parameters should come at the end of the parameter list -->
    <Rule Id="S3346" Action="Warning" /> <!-- Expressions used in "Debug.Assert" should not produce side effects -->
    <Rule Id="S3353" Action="Warning" /> <!-- Unchanged local variables should be "const" -->
    <Rule Id="S3358" Action="Warning" /> <!-- Ternary operators should not be nested -->
    <Rule Id="S3366" Action="Warning" /> <!-- "this" should not be exposed from constructors -->
    <Rule Id="S3376" Action="Warning" /> <!-- Attribute, EventArgs, and Exception type names should end with the type being extended -->
    <Rule Id="S3397" Action="Warning" /> <!-- Methods should not perform initialization in loops -->
    <Rule Id="S3398" Action="Warning" /> <!-- "private" methods called only by inner classes should be "internal" -->
    <Rule Id="S3400" Action="Warning" /> <!-- Methods should not return constants -->
    <Rule Id="S3415" Action="Warning" /> <!-- Assertion arguments should be passed in the correct order -->
    <Rule Id="S3427" Action="Warning" /> <!-- Method overloads with default parameter values should not overlap -->
    <Rule Id="S3431" Action="Warning" /> <!-- "ExpectedExceptionAttribute" should not be used -->
    <Rule Id="S3433" Action="Warning" /> <!-- Test methods should have correct signatures -->
    <Rule Id="S3440" Action="Warning" /> <!-- Variables should not be checked against the values they're about to be assigned -->
    <Rule Id="S3441" Action="Warning" /> <!-- Redundant casts should not be used -->
    <Rule Id="S3442" Action="Warning" /> <!-- "abstract" classes should not have "public" constructors -->
    <Rule Id="S3443" Action="Warning" /> <!-- Type should not be examined on "System.Type" instances -->
    <Rule Id="S3444" Action="Warning" /> <!-- Interfaces should not simply inherit from base interfaces with colliding members -->
    <Rule Id="S3445" Action="Warning" /> <!-- Exceptions should not be explicitly rethrown -->
    <Rule Id="S3449" Action="Warning" /> <!-- Right operands of shift operators should be integers -->
    <Rule Id="S3450" Action="Warning" /> <!-- Type should not be examined on "System.Type" instances -->
    <Rule Id="S3451" Action="Warning" /> <!-- "yield" should not be used in blocks with other jump statements -->
    <Rule Id="S3453" Action="Warning" /> <!-- Classes should not have only "private" constructors -->
    <Rule Id="S3456" Action="Warning" /> <!-- "string.ToCharArray()" should not be called redundantly -->
    <Rule Id="S3457" Action="Warning" /> <!-- Composite format strings should be used correctly -->
    <Rule Id="S3458" Action="Warning" /> <!-- Empty "case" clauses that fall through to the "default" should be omitted -->
    <Rule Id="S3459" Action="Warning" /> <!-- Unassigned members should be removed -->
    <Rule Id="S3466" Action="Warning" /> <!-- Optional parameters should not precede required parameters -->
    <Rule Id="S3532" Action="Warning" /> <!-- Empty "default" clauses should be omitted -->
    <Rule Id="S3597" Action="Warning" /> <!-- "ServiceContract" and "OperationContract" attributes should be used together -->
    <Rule Id="S3598" Action="Warning" /> <!-- One-way "OperationContract" methods should have "void" return type -->
    <Rule Id="S3600" Action="Warning" /> <!-- "params" should not be introduced on overrides -->
    <Rule Id="S3603" Action="Warning" /> <!-- Methods with "Pure" attribute should return a value -->
    <Rule Id="S3604" Action="Warning" /> <!-- Member initializer values should not be redundant -->
    <Rule Id="S3610" Action="Warning" /> <!-- Nullable type comparison should not be redundant -->
    <Rule Id="S3626" Action="Warning" /> <!-- Jump statements should not be redundant -->
    <Rule Id="S3655" Action="Warning" /> <!-- Empty nullable value should not be accessed -->
    <Rule Id="S3871" Action="Warning" /> <!-- Exception types should be "public" -->
    <Rule Id="S3872" Action="Warning" /> <!-- Parameter names should not duplicate the type name -->
    <Rule Id="S3874" Action="Warning" /> <!-- "out" and "ref" parameters should not be used in async methods -->
    <Rule Id="S3875" Action="Warning" /> <!-- "operator==" should not be overloaded on reference types -->
    <Rule Id="S3876" Action="Warning" /> <!-- Strings or integral types should be used for indexers -->
    <Rule Id="S3877" Action="Warning" /> <!-- Exceptions should not be thrown from unexpected methods -->
    <Rule Id="S3880" Action="Warning" /> <!-- Finalizers should not be empty -->
    <Rule Id="S3881" Action="Warning" /> <!-- "IDisposable" should be implemented correctly -->
    <Rule Id="S3884" Action="Warning" /> <!-- "CoSetProxyBlanket" and "CoInitializeSecurity" should not be used -->
    <Rule Id="S3885" Action="Warning" /> <!-- "Assembly.LoadFrom" should not be used -->
    <Rule Id="S3887" Action="Warning" /> <!-- Mutable, non-private fields should not be "readonly" -->
    <Rule Id="S3889" Action="Warning" /> <!-- "Thread.Resume" and "Thread.Suspend" should not be used -->
    <Rule Id="S3897" Action="Warning" /> <!-- Classes that provide "Equals(<T>)" should implement "IEquatable<T>" -->
    <Rule Id="S3898" Action="Warning" /> <!-- Value types should implement "IEquatable<T>" -->
    <Rule Id="S3900" Action="Warning" /> <!-- Arguments of public methods should be validated against null -->
    <Rule Id="S3902" Action="Warning" /> <!-- "Assembly.GetExecutingAssembly" should not be called from within a library -->
    <Rule Id="S3903" Action="Warning" /> <!-- Types should be defined in named namespaces -->
    <Rule Id="S3904" Action="Warning" /> <!-- Assemblies should have version information -->
    <Rule Id="S3906" Action="Warning" /> <!-- Event handlers should have the correct signature -->
    <Rule Id="S3908" Action="Warning" /> <!-- Generic event handlers should be used -->
    <Rule Id="S3909" Action="Warning" /> <!-- Collections should implement the generic interface -->
    <Rule Id="S3923" Action="Warning" /> <!-- All branches in a conditional structure should not have the same implementation -->
    <Rule Id="S3925" Action="Warning" /> <!-- "ISerializable" should be implemented correctly -->
    <Rule Id="S3926" Action="Warning" /> <!-- Deserialization methods should be provided for "OptionalField" members -->
    <Rule Id="S3927" Action="Warning" /> <!-- Serialization event handlers should be implemented correctly -->
    <Rule Id="S3928" Action="Warning" /> <!-- Parameter names used into ArgumentException constructors should match an existing one -->
    <Rule Id="S3937" Action="Warning" /> <!-- Number patterns should be regular -->
    <Rule Id="S3956" Action="Warning" /> <!-- "Generic.List" instances should not be part of public APIs -->
    <Rule Id="S3962" Action="Warning" /> <!-- "static readonly" constants should be "const" instead -->
    <Rule Id="S3963" Action="Warning" /> <!-- "static" fields should be initialized inline -->
    <Rule Id="S3966" Action="Warning" /> <!-- Objects should not be disposed more than once -->
    <Rule Id="S3967" Action="Warning" /> <!-- Multidimensional arrays should not be used -->
    <Rule Id="S3971" Action="Warning" /> <!-- "GC.SuppressFinalize" should not be called -->
    <Rule Id="S3972" Action="Warning" /> <!-- Conditionals should start on new lines -->
    <Rule Id="S3973" Action="Warning" /> <!-- A conditionals should not always evaluate to the same value -->
    <Rule Id="S3981" Action="Warning" /> <!-- Collection sizes and array length comparisons should make sense -->
    <Rule Id="S3984" Action="Warning" /> <!-- Exception should not be created without being thrown -->
    <Rule Id="S3990" Action="Warning" /> <!-- Assemblies should be marked with NeutralResourcesLanguageAttribute -->
    <Rule Id="S3992" Action="Warning" /> <!-- Assemblies should be marked as CLS compliant -->
    <Rule Id="S3993" Action="Warning" /> <!-- Custom attributes should be marked with "System.AttributeUsageAttribute" -->
    <Rule Id="S3994" Action="Warning" /> <!-- URI Parameters should not be strings -->
    <Rule Id="S3995" Action="Warning" /> <!-- URI return values should not be strings -->
    <Rule Id="S3996" Action="Warning" /> <!-- URI properties should not be strings -->
    <Rule Id="S3997" Action="Warning" /> <!-- String URI overloads should call "System.Uri" overloads -->
    <Rule Id="S4000" Action="Warning" /> <!-- Pointers to unmanaged memory should not be visible -->
    <Rule Id="S4002" Action="Warning" /> <!-- Disposable types should declare finalizers -->
    <Rule Id="S4004" Action="Warning" /> <!-- Collection properties should be readonly -->
    <Rule Id="S4005" Action="Warning" /> <!-- "System.Uri" should be used instead of "System.String" -->
    <Rule Id="S4018" Action="Warning" /> <!-- Generic methods should provide type parameters -->
    <Rule Id="S4019" Action="Warning" /> <!-- Base class methods should not be hidden -->
    <Rule Id="S4022" Action="Warning" /> <!-- Enums storage should be Int32 -->
    <Rule Id="S4023" Action="Warning" /> <!-- Interfaces should not be empty -->
    <Rule Id="S4025" Action="Warning" /> <!-- Child class fields should not shadow parent class fields -->
    <Rule Id="S4026" Action="Warning" /> <!-- Assemblies should be marked with "System.CLSCompliantAttribute" -->
    <Rule Id="S4027" Action="Warning" /> <!-- Exceptions should provide standard constructors -->
    <Rule Id="S4035" Action="Warning" /> <!-- Classes implementing "IEquatable<T>" should be sealed -->
    <Rule Id="S4039" Action="Warning" /> <!-- Interface methods should be callable by derived types -->
    <Rule Id="S4040" Action="Warning" /> <!-- Strings should be normalized to uppercase -->
    <Rule Id="S4041" Action="Warning" /> <!-- Type names should not match namespaces -->
    <Rule Id="S4049" Action="Warning" /> <!-- Properties should be preferred -->
    <Rule Id="S4050" Action="Warning" /> <!-- Operators should be overloaded consistently -->
    <Rule Id="S4052" Action="Warning" /> <!-- Types should not extend outdated base types -->
    <Rule Id="S4136" Action="Warning" /> <!-- Method overloads should be grouped together -->
    <Rule Id="S4158" Action="Warning" /> <!-- Empty collections should not be accessed or iterated -->
    <Rule Id="S4159" Action="Warning" /> <!-- Classes should implement their "ExceptionAggregator" -->
    <Rule Id="S4200" Action="Warning" /> <!-- Native methods should be wrapped -->
    <Rule Id="S4201" Action="Warning" /> <!-- Null checks should not be used with "is" -->
    <Rule Id="S4210" Action="Warning" /> <!-- Windows Forms entry points should be marked with "STAThread" -->
    <Rule Id="S4211" Action="Warning" /> <!-- Generic type parameters should be provided -->
    <Rule Id="S4212" Action="Warning" /> <!-- Serialization constructors should be secured -->
    <Rule Id="S4214" Action="Warning" /> <!-- "P/Invoke" methods should not be visible -->
    <Rule Id="S4220" Action="Warning" /> <!-- Events should have proper arguments -->
    <Rule Id="S4260" Action="Warning" /> <!-- Constructors should not call overridable methods -->
    <Rule Id="S4261" Action="Warning" /> <!-- Methods should not have too many overloads -->
    <Rule Id="S4275" Action="Warning" /> <!-- Getters and setters should access the expected fields -->
    <Rule Id="S4456" Action="Warning" /> <!-- Parameter validation in "async"/"await" methods should be wrapped -->
    <Rule Id="S4457" Action="Warning" /> <!-- Parameter validation in "yielding" methods should be wrapped -->
    <Rule Id="S4462" Action="Warning" /> <!-- Calls to "async" methods should not be blocking -->
    <Rule Id="S4524" Action="Warning" /> <!-- "switch" default clauses should be last -->
    <Rule Id="S4581" Action="Warning" /> <!-- "new Guid()" should not be used -->
    <Rule Id="S4586" Action="Warning" /> <!-- Non-"async" methods should not return "Task" -->
    <Rule Id="S4635" Action="Warning" /> <!-- Classes extending "System.Configuration.ConfigurationSection" should be marked "sealed" -->
    <Rule Id="S4792" Action="Warning" /> <!-- Configuring loggers is security-sensitive -->
    <Rule Id="S4830" Action="Warning" /> <!-- Server certificates should be verified during SSL/TLS connections -->
    <Rule Id="S5034" Action="Warning" /> <!-- "ValueTask" should not be misused -->
    <Rule Id="S5042" Action="Warning" /> <!-- Expanding archive files is security-sensitive -->
    <Rule Id="S5122" Action="Warning" /> <!-- Having a permissive Cross-Origin Resource Sharing policy is security-sensitive -->
    <Rule Id="S5547" Action="Warning" /> <!-- Cipher algorithms should be robust -->
    <Rule Id="S5659" Action="Warning" /> <!-- JWT should be signed and verified -->
    <Rule Id="S5766" Action="Warning" /> <!-- Deserializing objects is security-sensitive -->
    <Rule Id="S5773" Action="Warning" /> <!-- Types allowed to be deserialized should be restricted -->
    <Rule Id="S6354" Action="Warning" /> <!-- Use a testable date/time provider -->
    <Rule Id="S6580" Action="Warning" /> <!-- Use a testable date/time provider -->
    <Rule Id="S6781" Action="Warning" /> <!-- JWT secret keys should not be disclosed -->
  </Rules>

</RuleSet> 