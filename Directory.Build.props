<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- Common Properties -->
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsNotAsErrors>NU1605</WarningsNotAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn> <!-- Missing XML comment warnings -->
  </PropertyGroup>

  <!-- Package Information -->
  <PropertyGroup>
    <Company>VibeMicro</Company>
    <Product>BuildingBlocks</Product>
    <Copyright>Copyright Â© VibeMicro $([System.DateTime]::Now.ToString('yyyy'))</Copyright>
    <Authors>VibeMicro Team</Authors>
    <Description>Comprehensive building blocks for microservices architecture</Description>
    <PackageProjectUrl>https://github.com/vibemicro/buildingblocks</PackageProjectUrl>
    <RepositoryUrl>https://github.com/vibemicro/buildingblocks</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageTags>microservices;ddd;cqrs;clean-architecture;building-blocks</PackageTags>
  </PropertyGroup>

  <!-- Version Information -->
  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix Condition="'$(Configuration)' == 'Debug'">dev</VersionSuffix>
    <AssemblyVersion>$(VersionPrefix).0</AssemblyVersion>
    <FileVersion>$(VersionPrefix).0</FileVersion>
    <InformationalVersion>$(VersionPrefix)$(VersionSuffix)</InformationalVersion>
  </PropertyGroup>

  <!-- Build Configuration -->
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
    <OutputPath>$(MSBuildThisFileDirectory)artifacts\bin\$(MSBuildProjectName)\$(Configuration)\</OutputPath>
    <BaseIntermediateOutputPath>$(MSBuildThisFileDirectory)artifacts\obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>
    <PackageOutputPath>$(MSBuildThisFileDirectory)artifacts\packages\</PackageOutputPath>
  </PropertyGroup>

  <!-- Source Code Analysis -->
  <PropertyGroup>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)BuildingBlocks.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <!-- Debug Configuration -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <!-- Release Configuration -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DefineConstants>TRACE</DefineConstants>
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Deterministic Build -->
  <PropertyGroup Condition="'$(CI)' == 'true'">
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <!-- Source Link -->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <!-- Central Package Management -->
  <PropertyGroup>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>
  </PropertyGroup>

  <!-- Project Type Specific Properties -->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'">
    <IsPackable Condition="'$(IsPackable)' == ''">true</IsPackable>
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Release'">true</GeneratePackageOnBuild>
  </PropertyGroup>

  <!-- Test Project Properties -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Test'))">
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutputFormat>cobertura</CoverletOutputFormat>
    <CoverletOutput>$(MSBuildThisFileDirectory)artifacts\coverage\</CoverletOutput>
    <Threshold>80</Threshold>
    <ThresholdType>line</ThresholdType>
    <ThresholdStat>minimum</ThresholdStat>
  </PropertyGroup>

  <!-- API Project Properties -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('API'))">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
  </PropertyGroup>

  <!-- Infrastructure Project Properties -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Infrastructure'))">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Domain Project Properties -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Domain'))">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Application Project Properties -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Application'))">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Global Package References -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" />
    <PackageReference Include="MinVer" PrivateAssets="All" />
  </ItemGroup>

  <!-- Global Assembly Attributes -->
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(MSBuildProjectName).Tests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(MSBuildProjectName).IntegrationTests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <!-- Include common files -->
  <ItemGroup Condition="Exists('$(MSBuildThisFileDirectory)README.md')">
    <None Include="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup Condition="Exists('$(MSBuildThisFileDirectory)icon.png')">
    <None Include="$(MSBuildThisFileDirectory)icon.png" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- Import Directory.Build.targets if it exists -->
  <Import Project="$(MSBuildThisFileDirectory)Directory.Build.targets" Condition="Exists('$(MSBuildThisFileDirectory)Directory.Build.targets')" />

</Project> 