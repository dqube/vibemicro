<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- Common Properties -->
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsNotAsErrors>NU1605</WarningsNotAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn> <!-- Missing XML comment warnings -->
    
    <!-- Modern .NET Properties -->
    <UseArtifactsOutput>true</UseArtifactsOutput>
    <AccelerateBuildsInVisualStudio>true</AccelerateBuildsInVisualStudio>
    <ProduceReferenceAssembly>true</ProduceReferenceAssembly>
    <CheckEolTargetFramework>false</CheckEolTargetFramework>
  </PropertyGroup>

  <!-- Package Information -->
  <PropertyGroup>
    <Company>VibeMicro</Company>
    <Product>BuildingBlocks</Product>
    <Copyright>Copyright Â© VibeMicro $([System.DateTime]::Now.ToString('yyyy'))</Copyright>
    <Authors>VibeMicro Team</Authors>
    <Description>Comprehensive building blocks for microservices architecture</Description>
    <PackageProjectUrl>https://github.com/vibemicro/buildingblocks</PackageProjectUrl>
    <RepositoryUrl>https://github.com/vibemicro/buildingblocks</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageTags>microservices;ddd;cqrs;clean-architecture;building-blocks</PackageTags>
  </PropertyGroup>

  <!-- Version Information -->
  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix Condition="'$(Configuration)' == 'Debug' AND '$(VersionSuffix)' == ''">dev</VersionSuffix>
    <AssemblyVersion>$(VersionPrefix).0</AssemblyVersion>
    <FileVersion>$(VersionPrefix).0</FileVersion>
    <InformationalVersion Condition="'$(VersionSuffix)' == ''">$(VersionPrefix)</InformationalVersion>
    <InformationalVersion Condition="'$(VersionSuffix)' != ''">$(VersionPrefix)-$(VersionSuffix)</InformationalVersion>
  </PropertyGroup>

  <!-- Build Configuration -->
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
    <OutputPath>$(MSBuildThisFileDirectory)artifacts\bin\$(MSBuildProjectName)\$(Configuration)\</OutputPath>
    <BaseIntermediateOutputPath>$(MSBuildThisFileDirectory)artifacts\obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>
    <PackageOutputPath>$(MSBuildThisFileDirectory)artifacts\packages\</PackageOutputPath>
  </PropertyGroup>

  <!-- Source Code Analysis -->
  <PropertyGroup>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
    <CodeAnalysisRuleSet Condition="Exists('$(MSBuildThisFileDirectory)BuildingBlocks.ruleset')">$(MSBuildThisFileDirectory)BuildingBlocks.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <!-- Debug Configuration -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <!-- Release Configuration -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DefineConstants>TRACE</DefineConstants>
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningsAsErrors />
  </PropertyGroup>

  <!-- Deterministic Build -->
  <PropertyGroup Condition="'$(CI)' == 'true' OR '$(GITHUB_ACTIONS)' == 'true' OR '$(TF_BUILD)' == 'True'">
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <!-- Source Link -->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <!-- Central Package Management -->
  <PropertyGroup>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <CentralPackageTransitivePinningEnabled>true</CentralPackageTransitivePinningEnabled>
  </PropertyGroup>

  <!-- Security Properties -->
  <PropertyGroup>
    <EnablePackageValidation>true</EnablePackageValidation>
    <PackageValidationBaselineVersion>$(VersionPrefix)</PackageValidationBaselineVersion>
  </PropertyGroup>

  <!-- Feature Control Properties -->
  <PropertyGroup>
    <!-- Global Features -->
    <IncludeValidation Condition="'$(IncludeValidation)' == ''">true</IncludeValidation>
    <IncludeSerialization Condition="'$(IncludeSerialization)' == ''">true</IncludeSerialization>
    <IncludeHttpClient Condition="'$(IncludeHttpClient)' == ''">true</IncludeHttpClient>
    <IncludeSecurity Condition="'$(IncludeSecurity)' == ''">true</IncludeSecurity>
    <IncludeTestFramework Condition="'$(IncludeTestFramework)' == ''">true</IncludeTestFramework>
    
    <!-- Infrastructure Features -->
    <IncludeEntityFramework Condition="'$(IncludeEntityFramework)' == ''">true</IncludeEntityFramework>
    <IncludeCaching Condition="'$(IncludeCaching)' == ''">true</IncludeCaching>
    <IncludeAuthentication Condition="'$(IncludeAuthentication)' == ''">true</IncludeAuthentication>
    <IncludeMapping Condition="'$(IncludeMapping)' == ''">true</IncludeMapping>
    <IncludeBackgroundServices Condition="'$(IncludeBackgroundServices)' == ''">true</IncludeBackgroundServices>
    <IncludeMessaging Condition="'$(IncludeMessaging)' == ''">true</IncludeMessaging>
    <IncludeMonitoring Condition="'$(IncludeMonitoring)' == ''">true</IncludeMonitoring>
    <IncludeCloudStorage Condition="'$(IncludeCloudStorage)' == ''">true</IncludeCloudStorage>
    <IncludeEmailServices Condition="'$(IncludeEmailServices)' == ''">true</IncludeEmailServices>
    
    <!-- API Features -->
    <IncludeSwagger Condition="'$(IncludeSwagger)' == ''">true</IncludeSwagger>
    <IncludeHealthChecks Condition="'$(IncludeHealthChecks)' == ''">true</IncludeHealthChecks>
    <IncludeApiVersioning Condition="'$(IncludeApiVersioning)' == ''">true</IncludeApiVersioning>
    <IncludeRateLimiting Condition="'$(IncludeRateLimiting)' == ''">true</IncludeRateLimiting>
    
    <!-- Tooling Features -->
    <IsSourceLinkSupported Condition="'$(IsSourceLinkSupported)' == ''">true</IsSourceLinkSupported>
    <UseMinVer Condition="'$(UseMinVer)' == ''">true</UseMinVer>
  </PropertyGroup>

  <!-- Define project types based on name and path patterns -->
  <PropertyGroup>
    <IsTestProject Condition="$(MSBuildProjectName.Contains('Test')) OR $(MSBuildProjectName.Contains('.Tests.')) OR $(MSBuildProjectFile.Contains('\Tests\')) OR $(MSBuildProjectFile.Contains('\Test\'))">true</IsTestProject>
    <IsApiProject Condition="$(MSBuildProjectName.Contains('API')) OR $(MSBuildProjectFile.Contains('\API\'))">true</IsApiProject>
    <IsInfrastructureProject Condition="$(MSBuildProjectName.Contains('Infrastructure')) OR $(MSBuildProjectFile.Contains('\Infrastructure\'))">true</IsInfrastructureProject>
    <IsDomainProject Condition="$(MSBuildProjectName.Contains('Domain')) OR $(MSBuildProjectFile.Contains('\Domain\'))">true</IsDomainProject>
    <IsApplicationProject Condition="$(MSBuildProjectName.Contains('Application')) OR $(MSBuildProjectFile.Contains('\Application\'))">true</IsApplicationProject>
    <IsBenchmarkProject Condition="$(MSBuildProjectName.Contains('Benchmark')) OR $(MSBuildProjectName.Contains('Benchmarks'))">true</IsBenchmarkProject>
    <IsIntegrationTestProject Condition="$(MSBuildProjectName.Contains('IntegrationTest')) OR $(MSBuildProjectName.Contains('Integration.Test'))">true</IsIntegrationTestProject>
  </PropertyGroup>

  <!-- Project Type Specific Properties -->
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'">
    <IsPackable Condition="'$(IsPackable)' == '' AND '$(IsTestProject)' != 'true' AND '$(IsBenchmarkProject)' != 'true'">true</IsPackable>
    <IsPackable Condition="'$(IsTestProject)' == 'true' OR '$(IsBenchmarkProject)' == 'true'">false</IsPackable>
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Release' AND '$(IsPackable)' == 'true'">true</GeneratePackageOnBuild>
  </PropertyGroup>

  <!-- Test Project Properties -->
  <PropertyGroup Condition="'$(IsTestProject)' == 'true'">
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutputFormat>cobertura</CoverletOutputFormat>
    <CoverletOutput>$(MSBuildThisFileDirectory)artifacts\coverage\</CoverletOutput>
    <Threshold>80</Threshold>
    <ThresholdType>line</ThresholdType>
    <ThresholdStat>minimum</ThresholdStat>
    <ExcludeFromCodeCoverage>false</ExcludeFromCodeCoverage>
  </PropertyGroup>

  <!-- API Project Properties -->
  <PropertyGroup Condition="'$(IsApiProject)' == 'true'">
    <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Infrastructure Project Properties -->
  <PropertyGroup Condition="'$(IsInfrastructureProject)' == 'true'">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Domain Project Properties -->
  <PropertyGroup Condition="'$(IsDomainProject)' == 'true'">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Application Project Properties -->
  <PropertyGroup Condition="'$(IsApplicationProject)' == 'true'">
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Benchmark Project Properties -->
  <PropertyGroup Condition="'$(IsBenchmarkProject)' == 'true'">
    <OutputType>Exe</OutputType>
    <IsPackable>false</IsPackable>
    <PublishAot Condition="'$(Configuration)' == 'Release'">true</PublishAot>
  </PropertyGroup>



  <!-- Global Assembly Attributes -->
  <ItemGroup Condition="'$(IsTestProject)' != 'true'">
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(MSBuildProjectName).Tests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(MSBuildProjectName).IntegrationTests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <!-- Include common files for packaging -->
  <ItemGroup Condition="'$(IsPackable)' == 'true'">
    <None Include="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="\" Condition="Exists('$(MSBuildThisFileDirectory)README.md')" />
    <None Include="$(MSBuildThisFileDirectory)icon.png" Pack="true" PackagePath="\" Condition="Exists('$(MSBuildThisFileDirectory)icon.png')" />
    <None Include="$(MSBuildThisFileDirectory)CHANGELOG.md" Pack="true" PackagePath="\" Condition="Exists('$(MSBuildThisFileDirectory)CHANGELOG.md')" />
    <None Include="$(MSBuildThisFileDirectory)LICENSE" Pack="true" PackagePath="\" Condition="Exists('$(MSBuildThisFileDirectory)LICENSE')" />
  </ItemGroup>

</Project> 